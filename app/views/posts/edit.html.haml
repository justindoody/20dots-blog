- provide(:title, "| #{@post.title}")

.relative.h-halfscreen.overflow-hidden.flex.flex-wrap.items-end.bg-gradient-to-r.from-green-400.to-blue-700{ 'data-controller' => 'parallax-header', 'data-action' => 'scroll@window->parallax-header#adjustOpacity scroll@window->parallax-header#adjustTitleHeight'}
  = render 'show_cover'
  #test.h-full.flex.flex-wrap.content-center{ 'data-parallax-header-target' => 'titleWrapper' }
    .relative.px-9.py-3.md:pl-sidebar.md:px-0{ 'data-parallax-header-target' => 'title' }
      .text-white.font-thin.text-2xl.text-shadow
        = @post.published_at&.strftime('%B %d, %Y')
      %div{ 'data-controller' => 'post-title', 'data-post-title-url-value' => post_title_path, 'data-post-title-fade-in-class' => 'opacity-40', 'data-post-title-fade-out-class' => 'opacity-0' }
        %h1.text-white.font-sidebar.text-7xl.font-semibold.text-shadow.pt-2.outline-none{ contenteditable: 'true', 'data-action' => 'input->post-title#saveTitle' }
          = @post.title

        .fixed.top-2.left-4.text-white.text-sm.bg-black.opacity-0.py-2.px-3.transition-all.duration-1000{ 'data-post-title-target' => 'saveMessage'}
          Saved

  .absolute.left-3.bottom-3{ 'data-controller' => 'cover-photo-upload' }
    = form_for(@post, url: post_path(@post.id), html: { multipart: true, 'data-cover-photo-upload-target' => 'form' }) do |f|

      %label{ for: 'cover-photo-input' }
        %i.fa.fa-camera.text-white.text-4xl.opacity-50.hover:opacity-70
      = f.file_field :cover_photo, accept: 'image/jpeg,image/gif,image/png', id: 'cover-photo-input', class: 'hidden', 'data-action' => 'change->cover-photo-upload#upload'

      = f.submit 'Upload Cover', class: 'hidden'


.flex.flex-col.md:flex-row
  = render 'layouts/posts_sidebar'

  .flex-grow.pt-9.px-9.md:px-0
    .post-body
      .mb-5
        - if @post.draft
          = link_to ("<i class='fa fa-toggle-off fa-fw'></i> Publish").html_safe, publish_post_path(@post.id), class: 'text-white py-2 px-5 mr-1 bg-green-500 hover:bg-green-600 rounded-lg font-light'

        - else
          = link_to ("<i class='fa fa-toggle-on fa-fw'></i> Unpublish").html_safe, unpublish_post_path(@post.id), class: 'text-white py-2 px-3 mr-1 bg-yellow-500 hover:bg-yellow-400 rounded-lg'

        = link_to ("<i class='fa fa-trash fa-fw'></i> Delete").html_safe, post_path(@post.id), method: "delete", class: 'text-white py-2 px-5 mr-1 bg-red-500 hover:bg-red-600 rounded-lg'

      .font-serif.text-xl.text-gray-900.leading-loose.md:pr-9{ data: { controller: 'post' }, 'data-post-fade-in-class' => 'opacity-40', 'data-post-fade-out-class' => 'opacity-0' }
        = form_for(@post, url: post_path(@post.id), remote: true, authenticity_token: true, html: { 'data-post-target' => 'form' }) do |f|
          = f.text_field :post, { id: 'post-data', value: @post.post.html_safe, type: 'hidden', 'data-post-target' => 'content' }
          = f.text_field :title, { type: 'hidden' }

          %trix-editor{ input: 'post-data', 'data-controller' => 'post-attachment', 'data-action' => 'trix-attachment-add@document->post-attachment#upload input->post#saveMe', 'data-post-attachment-url-value' => post_images_path(@post.id) }

        .font-sans.fixed.top-2.left-4.text-white.text-sm.bg-black.opacity-0.py-2.px-3.transition-all.duration-1000{ 'data-post-target' => 'saveMessage' }
          Saved

= link_to ("<i class='fa fa-sign-out fa-fw'></i> logout").html_safe, logout_sessions_path, id: 'logout_button', class: 'fixed right-0 top-0 py-3 px-5 bg-white text-black font-light opacity-30 hover:opacity-50'
