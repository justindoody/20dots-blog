version: "3.8"

networks:
  default:
    external: true
    name: traefik-public

secrets:
  RAILS_MASTER_KEY:
    external: true
  DATABASE_URL:
    external: true

services:
  web:
    image: ghcr.io/justindoody/20dots-blog:${GITHUB_SHA}
    command: bundle exec rails server -p 3000 -b '0.0.0.0'
    environment:
      RAILS_ENV: production
      # No CDN for now.
      RAILS_SERVE_STATIC_FILES: 'true'
      RAILS_LOG_TO_STDOUT: 'true'
      RAILS_MASTER_KEY_FILE: /run/secrets/RAILS_MASTER_KEY
      DATABASE_URL_FILE: /run/secrets/DATABASE_URL
    secrets:
      - RAILS_MASTER_KEY
      - DATABASE_URL
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.25'
          memory: 300M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
      labels:
        - "traefik.enable=true"
        - "traefik.constraint-label=traefik-public"
        - "traefik.docker.network=traefik-public"
        # HTTP Redirect
        - "traefik.http.routers.blog-http.rule=Host(`blog.20dots.com`)"
        - "traefik.http.routers.blog-http.entrypoints=http"
        - "traefik.http.routers.blog-http.middlewares=https-redirect@file"
        # HTTPS
        - "traefik.http.routers.blog-https.rule=Host(`blog.20dots.com`)"
        - "traefik.http.routers.blog-https.entrypoints=https"
        - "traefik.http.routers.blog-https.tls=true"
        - "traefik.http.routers.blog-https.tls.certResolver=dns-cloudflare"
        # Tell Traefik to use the port 3000 to connect
        - "traefik.http.services.blog.loadbalancer.server.port=3000"
    volumes:
      - "/mnt/apps_data/blog-uploads:/code/public/uploads"
